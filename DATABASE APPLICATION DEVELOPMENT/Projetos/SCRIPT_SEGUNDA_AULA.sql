SELECT  COUNT(*),
        COUNT(department_id),
        MIN(SALARY),
        MAX(SALARY),
        MAX(HIRE_DATE),
        MIN(HIRE_DATE),
        MAX(LAST_NAME),
        MIN(LAST_NAME),
        AVG(LAST_NAME)
FROM EMPLOYEES;


SELECT EMPLOYEE_ID, DEPARTMENT_ID FROM employees; /* FUN합ES DE GRUPO N홒 CONTAM O TIPO NULL */


SELECT COUNT(DEPARTMENT_ID) FROM EMPLOYEES; /* RETORNA 106 */
SELECT COUNT(DISTINCT DEPARTMENT_ID) FROM EMPLOYEES; /* RETORNA 11 => OU SEJA, NA EMPRESA TEM APENAS 11 DEPARTAMENTOS */ 

SELECT  DEPARTMENT_ID, AVG(SALARY), ROUND(AVG(SALARY),0), TRUNC(AVG(SALARY), 0) FROM EMPLOYEES  GROUP BY DEPARTMENT_ID ORDER BY 1;

/*
    PARA TIRAR OS NUMEROS DECIMAIS, PODE SER UTILIZADO DUAS FUN합ES:
    ROUND => RECEBE DOIS PARAMETROS, 1 OBRIGATORIO E OUTRO OPCIONAL, SENDO ELES A COLUNA QUE DESEJA E OUTRO AS CASAS DECIMAIS, A FUN플O ROUND ELA CONTA OS NUMEROS DECIMAIS E DEPEDENDO ELA ARRENDONDA PARA CIMA OU ARRENDONDA PARA BAIXO
    TRUNC => RECEBE DOIS PARAMETROS, 1 OBRIGATORIO E OUTRO OPCIONAL

*/


SELECT DEPARTMENT_NAME, JOB_ID, ROUND(AVG(SALARY)) 
 FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON(D.DEPARTMENT_ID = E.DEPARTMENT_ID)
 WHERE D.DEPARTMENT_ID IN (10,20,30,40) 
 GROUP BY DEPARTMENT_NAME, JOB_ID 
 HAVING AVG(SALARY) > 7000
 ORDER BY 1, 2, 3;
 
 
 /*
    FUN플O DE GRUPO SEMPRE USA COM HAVING, NUNCA COM WHERE
    HAVING FUN플O DE GRUPO
    TUDO QUE SABE NO WHERE SE APLICA NO HAVING
 */

/* MAIOR MEDIA DO SALARIO */
SELECT ROUND(MAX(AVG(SALARY))) FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;


/*
    SUBQUERY CLASULA(SELECT, FROM, WHERE, HAVING)
*/

-- FUNCIONARIO QUE GANHAM MAIS QUE O SALARIO DO FUNCIONARIO ABEL
SELECT LAST_NAME, SALARY FROM EMPLOYEES
WHERE SALARY > (SELECT SALARY FROM EMPLOYEES WHERE LAST_NAME = 'Abel');


